"use client";
import { Inter } from "next/font/google";
import "./globals.css";
import ApolloClient from "apollo-client";
import {
	ApolloLink,
	ApolloProvider,
	concat,
	HttpLink,
	InMemoryCache,
} from "@apollo/client";
import { AuthProvider } from "@/Context/Auth";

const inter = Inter({ subsets: ["latin"] });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };



export default function RootLayout({ children }) {
	const httpLink = new HttpLink({
		uri: `${process.env.NEXT_PUBLIC_URL}/graphql`,
	});


	const authMiddleware = new ApolloLink((operation, forward) => {
		const token = sessionStorage.getItem("token");

		operation.setContext({
			headers: {
				authorization: token ? `Bearer ${token}` : "",
			},
		});
		return forward(operation);
	});

	const client = new ApolloClient({
		link: concat(authMiddleware, httpLink),
		credentials: "include",
		cache: new InMemoryCache(),
	});
	return (
		<html lang="en">
			<body className={inter.className}>
				<ApolloProvider client={client}>
					<AuthProvider>{children}</AuthProvider>
				</ApolloProvider>
			</body>
		</html>
	);
}
